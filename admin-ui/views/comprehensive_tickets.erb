<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Comprehensive Ticket View - Wiseguy</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: #333;
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 20px;
        }

        .header {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 30px;
            margin-bottom: 30px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }

        .header h1 {
            color: #2c3e50;
            font-size: 2.5em;
            margin-bottom: 10px;
            text-align: center;
        }

        .header p {
            color: #7f8c8d;
            text-align: center;
            font-size: 1.1em;
        }

        .controls {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 25px;
            margin-bottom: 30px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }

        .control-row {
            display: flex;
            gap: 20px;
            margin-bottom: 20px;
            flex-wrap: wrap;
            align-items: center;
        }

        .control-group {
            display: flex;
            flex-direction: column;
            gap: 8px;
        }

        .control-group label {
            font-weight: 600;
            color: #2c3e50;
            font-size: 0.9em;
        }

        .control-group input,
        .control-group select {
            padding: 12px 15px;
            border: 2px solid #e0e6ed;
            border-radius: 8px;
            font-size: 14px;
            transition: all 0.3s ease;
            background: white;
        }

        .control-group input:focus,
        .control-group select:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .btn {
            padding: 12px 24px;
            border: none;
            border-radius: 8px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 14px;
            text-decoration: none;
            display: inline-block;
            text-align: center;
        }

        .btn-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
        }

        .btn-secondary {
            background: #ecf0f1;
            color: #2c3e50;
        }

        .btn-secondary:hover {
            background: #d5dbdb;
            transform: translateY(-1px);
        }

        .btn-success {
            background: #27ae60;
            color: white;
        }

        .btn-success:hover {
            background: #229954;
            transform: translateY(-2px);
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .stat-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 25px;
            text-align: center;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease;
        }

        .stat-card:hover {
            transform: translateY(-5px);
        }

        .stat-number {
            font-size: 2.5em;
            font-weight: bold;
            color: #667eea;
            margin-bottom: 10px;
        }

        .stat-label {
            color: #7f8c8d;
            font-size: 0.9em;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .tickets-container {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 25px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }

        .tickets-header {
            display: flex;
            justify-content: between;
            align-items: center;
            margin-bottom: 20px;
            flex-wrap: wrap;
            gap: 15px;
        }

        .tickets-count {
            font-size: 1.2em;
            color: #2c3e50;
            font-weight: 600;
        }

        .tickets-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

        .tickets-table th,
        .tickets-table td {
            padding: 15px;
            text-align: left;
            border-bottom: 1px solid #e0e6ed;
        }

        .tickets-table th {
            background: #f8f9fa;
            font-weight: 600;
            color: #2c3e50;
            position: sticky;
            top: 0;
        }

        .tickets-table tr:hover {
            background: #f8f9fa;
        }

        .ticket-key {
            font-weight: 600;
            color: #667eea;
            text-decoration: none;
        }

        .ticket-key:hover {
            text-decoration: underline;
        }

        .priority-high {
            color: #e74c3c;
            font-weight: 600;
        }

        .priority-medium {
            color: #f39c12;
            font-weight: 600;
        }

        .priority-low {
            color: #27ae60;
            font-weight: 600;
        }

        .status-badge {
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 0.8em;
            font-weight: 600;
            text-transform: uppercase;
        }

        .status-open {
            background: #e8f5e8;
            color: #27ae60;
        }

        .status-closed {
            background: #ffeaea;
            color: #e74c3c;
        }

        .status-in-progress {
            background: #fff3cd;
            color: #f39c12;
        }

        .loading {
            text-align: center;
            padding: 40px;
            color: #7f8c8d;
        }

        .error {
            background: #ffeaea;
            color: #e74c3c;
            padding: 15px;
            border-radius: 8px;
            margin: 20px 0;
        }

        .success {
            background: #e8f5e8;
            color: #27ae60;
            padding: 15px;
            border-radius: 8px;
            margin: 20px 0;
        }

        .pagination {
            display: flex;
            justify-content: center;
            gap: 10px;
            margin-top: 20px;
        }

        .pagination button {
            padding: 8px 12px;
            border: 1px solid #e0e6ed;
            background: white;
            border-radius: 4px;
            cursor: pointer;
        }

        .pagination button.active {
            background: #667eea;
            color: white;
            border-color: #667eea;
        }

        .nav-links {
            text-align: center;
            margin-bottom: 20px;
        }

        .nav-links a {
            color: #667eea;
            text-decoration: none;
            margin: 0 10px;
            padding: 8px 16px;
            border-radius: 6px;
            transition: background 0.3s ease;
        }

        .nav-links a:hover {
            background: rgba(102, 126, 234, 0.1);
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üé´ Comprehensive Ticket View</h1>
            <p>View and manage all tickets across all JIRA projects</p>
        </div>

        <div class="nav-links">
            <a href="/">üè† Dashboard</a>
            <a href="/tickets">üìä Ticket Analysis</a>
            <a href="/comprehensive-tickets">üé´ All Tickets</a>
            <a href="/settings">‚öôÔ∏è Settings</a>
        </div>

        <div class="controls">
            <div class="control-row">
                <div class="control-group">
                    <label for="search">Search Tickets</label>
                    <input type="text" id="search" placeholder="Search by key, summary, description, assignee...">
                </div>
                <div class="control-group">
                    <label for="filter-type">Filter By</label>
                    <select id="filter-type">
                        <option value="">All Tickets</option>
                        <option value="status">Status</option>
                        <option value="priority">Priority</option>
                        <option value="issue_type">Issue Type</option>
                        <option value="assignee">Assignee</option>
                        <option value="reporter">Reporter</option>
                        <option value="recent">Recent (30 days)</option>
                        <option value="old">Old (6+ months)</option>
                        <option value="unassigned">Unassigned</option>
                        <option value="high_priority">High Priority</option>
                    </select>
                </div>
                <div class="control-group">
                    <label for="filter-value">Filter Value</label>
                    <input type="text" id="filter-value" placeholder="Enter filter value...">
                </div>
                <div class="control-group">
                    <label>&nbsp;</label>
                    <button class="btn btn-primary" onclick="searchTickets()">üîç Search</button>
                </div>
            </div>
            <div class="control-row">
                <button class="btn btn-success" onclick="syncAllTickets()">üîÑ Sync All Tickets</button>
                <button class="btn btn-secondary" onclick="loadStatistics()">üìä Load Statistics</button>
                <button class="btn btn-secondary" onclick="loadAllTickets()">üìã Load All Tickets</button>
                <span id="sync-status"></span>
            </div>
        </div>

        <div class="stats-grid" id="statistics">
            <!-- Statistics will be loaded here -->
        </div>

        <div class="tickets-container">
            <div class="tickets-header">
                <div class="tickets-count" id="tickets-count">No tickets loaded</div>
                <div id="loading-indicator" style="display: none;">üîÑ Loading...</div>
            </div>
            <div id="error-message"></div>
            <div id="success-message"></div>
            <div id="tickets-table-container">
                <div class="loading">Click "Load All Tickets" to start</div>
            </div>
        </div>
    </div>

    <script>
        let currentPage = 1;
        let ticketsPerPage = 50;
        let allTickets = [];

        // Load sync status on page load
        document.addEventListener('DOMContentLoaded', function() {
            loadSyncStatus();
        });

        function loadSyncStatus() {
            fetch('/api/tickets/sync-status')
                .then(response => response.json())
                .then(data => {
                    if (data.last_sync) {
                        document.getElementById('sync-status').innerHTML = 
                            `Last sync: ${new Date(data.last_sync).toLocaleString()}`;
                    }
                })
                .catch(error => {
                    console.error('Error loading sync status:', error);
                });
        }

        function syncAllTickets() {
            showMessage('üîÑ Starting comprehensive ticket sync...', 'info');
            document.getElementById('loading-indicator').style.display = 'block';
            
            fetch('/api/tickets/sync')
                .then(response => response.json())
                .then(data => {
                    document.getElementById('loading-indicator').style.display = 'none';
                    if (data.error) {
                        showMessage(`‚ùå Sync failed: ${data.error}`, 'error');
                    } else {
                        showMessage(`‚úÖ Sync completed! ${data.total_tickets} tickets across ${data.projects_processed} projects`, 'success');
                        loadSyncStatus();
                        loadStatistics();
                    }
                })
                .catch(error => {
                    document.getElementById('loading-indicator').style.display = 'none';
                    showMessage(`‚ùå Sync error: ${error.message}`, 'error');
                });
        }

        function loadStatistics() {
            fetch('/api/tickets/statistics')
                .then(response => response.json())
                .then(data => {
                    if (Object.keys(data).length === 0) {
                        document.getElementById('statistics').innerHTML = 
                            '<div class="stat-card"><div class="stat-number">0</div><div class="stat-label">No Data</div></div>';
                        return;
                    }

                    const statsHtml = `
                        <div class="stat-card">
                            <div class="stat-number">${data.total_tickets || 0}</div>
                            <div class="stat-label">Total Tickets</div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-number">${data.unassigned || 0}</div>
                            <div class="stat-label">Unassigned</div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-number">${data.recent || 0}</div>
                            <div class="stat-label">Recent (30 days)</div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-number">${data.old || 0}</div>
                            <div class="stat-label">Old (6+ months)</div>
                        </div>
                    `;
                    document.getElementById('statistics').innerHTML = statsHtml;
                })
                .catch(error => {
                    showMessage(`‚ùå Error loading statistics: ${error.message}`, 'error');
                });
        }

        function loadAllTickets() {
            document.getElementById('loading-indicator').style.display = 'block';
            
            fetch('/api/tickets/all')
                .then(response => response.json())
                .then(data => {
                    document.getElementById('loading-indicator').style.display = 'none';
                    allTickets = data.tickets || [];
                    currentPage = 1;
                    displayTickets();
                    document.getElementById('tickets-count').textContent = 
                        `${allTickets.length} tickets loaded`;
                })
                .catch(error => {
                    document.getElementById('loading-indicator').style.display = 'none';
                    showMessage(`‚ùå Error loading tickets: ${error.message}`, 'error');
                });
        }

        function searchTickets() {
            const query = document.getElementById('search').value;
            const filterType = document.getElementById('filter-type').value;
            const filterValue = document.getElementById('filter-value').value;

            document.getElementById('loading-indicator').style.display = 'block';

            let url = '/api/tickets/search?q=' + encodeURIComponent(query);
            if (filterType && filterValue) {
                url = `/api/tickets/filter/${filterType}?value=${encodeURIComponent(filterValue)}`;
            } else if (filterType) {
                url = `/api/tickets/filter/${filterType}`;
            }

            fetch(url)
                .then(response => response.json())
                .then(data => {
                    document.getElementById('loading-indicator').style.display = 'none';
                    allTickets = data.tickets || [];
                    currentPage = 1;
                    displayTickets();
                    document.getElementById('tickets-count').textContent = 
                        `${allTickets.length} tickets found`;
                })
                .catch(error => {
                    document.getElementById('loading-indicator').style.display = 'none';
                    showMessage(`‚ùå Error searching tickets: ${error.message}`, 'error');
                });
        }

        function displayTickets() {
            const startIndex = (currentPage - 1) * ticketsPerPage;
            const endIndex = startIndex + ticketsPerPage;
            const pageTickets = allTickets.slice(startIndex, endIndex);

            if (pageTickets.length === 0) {
                document.getElementById('tickets-table-container').innerHTML = 
                    '<div class="loading">No tickets found</div>';
                return;
            }

            const tableHtml = `
                <table class="tickets-table">
                    <thead>
                        <tr>
                            <th>Key</th>
                            <th>Summary</th>
                            <th>Project</th>
                            <th>Status</th>
                            <th>Priority</th>
                            <th>Type</th>
                            <th>Assignee</th>
                            <th>Updated</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${pageTickets.map(ticket => `
                            <tr>
                                <td>
                                    <a href="https://brightmove.atlassian.net/browse/${ticket.key}" 
                                       target="_blank" class="ticket-key">${ticket.key}</a>
                                </td>
                                <td>${ticket.summary || 'No summary'}</td>
                                <td>${ticket.project_name || ticket.project_key || 'Unknown'}</td>
                                <td>
                                    <span class="status-badge status-${getStatusClass(ticket.status)}">
                                        ${ticket.status || 'Unknown'}
                                    </span>
                                </td>
                                <td class="priority-${getPriorityClass(ticket.priority)}">
                                    ${ticket.priority || 'Unset'}
                                </td>
                                <td>${ticket.issue_type || 'Unknown'}</td>
                                <td>${ticket.assignee || 'Unassigned'}</td>
                                <td>${formatDate(ticket.updated)}</td>
                            </tr>
                        `).join('')}
                    </tbody>
                </table>
                ${generatePagination()}
            `;
            document.getElementById('tickets-table-container').innerHTML = tableHtml;
        }

        function generatePagination() {
            const totalPages = Math.ceil(allTickets.length / ticketsPerPage);
            if (totalPages <= 1) return '';

            let paginationHtml = '<div class="pagination">';
            
            if (currentPage > 1) {
                paginationHtml += `<button onclick="changePage(${currentPage - 1})">Previous</button>`;
            }

            for (let i = 1; i <= totalPages; i++) {
                if (i === currentPage) {
                    paginationHtml += `<button class="active">${i}</button>`;
                } else {
                    paginationHtml += `<button onclick="changePage(${i})">${i}</button>`;
                }
            }

            if (currentPage < totalPages) {
                paginationHtml += `<button onclick="changePage(${currentPage + 1})">Next</button>`;
            }

            paginationHtml += '</div>';
            return paginationHtml;
        }

        function changePage(page) {
            currentPage = page;
            displayTickets();
        }

        function getStatusClass(status) {
            if (!status) return 'unknown';
            const statusLower = status.toLowerCase();
            if (statusLower.includes('closed') || statusLower.includes('resolved')) return 'closed';
            if (statusLower.includes('in progress') || statusLower.includes('open')) return 'in-progress';
            return 'open';
        }

        function getPriorityClass(priority) {
            if (!priority) return 'low';
            const priorityLower = priority.toLowerCase();
            if (priorityLower.includes('critical') || priorityLower.includes('high')) return 'high';
            if (priorityLower.includes('medium')) return 'medium';
            return 'low';
        }

        function formatDate(dateString) {
            if (!dateString) return 'Unknown';
            try {
                return new Date(dateString).toLocaleDateString();
            } catch {
                return 'Invalid Date';
            }
        }

        function showMessage(message, type) {
            const messageDiv = document.getElementById(type === 'error' ? 'error-message' : 'success-message');
            messageDiv.innerHTML = `<div class="${type}">${message}</div>`;
            setTimeout(() => {
                messageDiv.innerHTML = '';
            }, 5000);
        }
    </script>
</body>
</html> 