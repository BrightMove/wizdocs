<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Wizdocs - Veracity Audit System</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: #f5f5f5;
            color: #333;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }
        
        .header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 30px;
            margin-bottom: 30px;
            border-radius: 12px;
            box-shadow: 0 4px 20px rgba(0,0,0,0.1);
        }
        
        .header h1 {
            font-size: 2.8em;
            margin-bottom: 10px;
            font-weight: 300;
        }
        
        .header p {
            opacity: 0.9;
            font-size: 1.2em;
            margin-bottom: 20px;
        }
        
        .nav-tabs {
            display: flex;
            background: rgba(255,255,255,0.1);
            border-radius: 8px;
            padding: 4px;
            margin-top: 20px;
        }
        
        .nav-tab {
            flex: 1;
            padding: 12px 20px;
            text-align: center;
            color: rgba(255,255,255,0.8);
            text-decoration: none;
            border-radius: 6px;
            transition: all 0.3s;
            font-weight: 500;
        }
        
        .nav-tab:hover, .nav-tab.active {
            background: rgba(255,255,255,0.2);
            color: white;
        }

        .controls {
            background: white;
            border-radius: 12px;
            padding: 25px;
            margin-bottom: 30px;
            box-shadow: 0 4px 15px rgba(0,0,0,0.08);
        }

        .control-row {
            display: flex;
            gap: 20px;
            margin-bottom: 20px;
            flex-wrap: wrap;
            align-items: center;
        }

        .btn {
            padding: 12px 24px;
            border: none;
            border-radius: 8px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 14px;
            text-decoration: none;
            display: inline-block;
            text-align: center;
        }

        .btn-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
        }

        .btn-success {
            background: #27ae60;
            color: white;
        }

        .btn-success:hover {
            background: #229954;
            transform: translateY(-2px);
        }

        .btn-warning {
            background: #f39c12;
            color: white;
        }

        .btn-warning:hover {
            background: #e67e22;
            transform: translateY(-2px);
        }

        .btn-danger {
            background: #e74c3c;
            color: white;
        }

        .btn-danger:hover {
            background: #c0392b;
            transform: translateY(-2px);
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .stat-card {
            background: white;
            border-radius: 12px;
            padding: 25px;
            text-align: center;
            box-shadow: 0 4px 15px rgba(0,0,0,0.08);
            transition: transform 0.3s ease;
        }

        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.12);
        }

        .stat-number {
            font-size: 2.5em;
            font-weight: bold;
            color: #667eea;
            margin-bottom: 10px;
        }

        .stat-label {
            color: #7f8c8d;
            font-size: 0.9em;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .analysis-container {
            background: white;
            border-radius: 12px;
            padding: 25px;
            margin-bottom: 30px;
            box-shadow: 0 4px 15px rgba(0,0,0,0.08);
        }

        .analysis-header {
            display: flex;
            justify-content: between;
            align-items: center;
            margin-bottom: 20px;
            flex-wrap: wrap;
            gap: 15px;
        }

        .analysis-count {
            font-size: 1.2em;
            color: #2c3e50;
            font-weight: 600;
        }

        .analysis-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

        .analysis-table th,
        .analysis-table td {
            padding: 15px;
            text-align: left;
            border-bottom: 1px solid #e0e6ed;
        }

        .analysis-table th {
            background: #f8f9fa;
            font-weight: 600;
            color: #2c3e50;
            position: sticky;
            top: 0;
        }

        .analysis-table tr:hover {
            background: #f8f9fa;
        }

        .similarity-score {
            font-weight: 600;
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 0.8em;
        }

        .similarity-high {
            background: #ffeaea;
            color: #e74c3c;
        }

        .similarity-medium {
            background: #fff3cd;
            color: #f39c12;
        }

        .severity-high {
            color: #e74c3c;
            font-weight: 600;
        }

        .severity-medium {
            color: #f39c12;
            font-weight: 600;
        }

        .content-link {
            color: #667eea;
            text-decoration: none;
            font-weight: 600;
        }

        .content-link:hover {
            text-decoration: underline;
        }

        .loading {
            text-align: center;
            padding: 40px;
            color: #7f8c8d;
        }

        .error {
            background: #ffeaea;
            color: #e74c3c;
            padding: 15px;
            border-radius: 8px;
            margin: 20px 0;
        }

        .success {
            background: #e8f5e8;
            color: #27ae60;
            padding: 15px;
            border-radius: 8px;
            margin: 20px 0;
        }

        .nav-links {
            text-align: center;
            margin-bottom: 20px;
        }

        .nav-links a {
            color: #667eea;
            text-decoration: none;
            margin: 0 10px;
            padding: 8px 16px;
            border-radius: 6px;
            transition: background 0.3s ease;
        }

        .nav-links a:hover {
            background: rgba(102, 126, 234, 0.1);
        }

        .tabs {
            display: flex;
            margin-bottom: 20px;
            border-bottom: 2px solid #e0e6ed;
        }

        .tab {
            padding: 12px 24px;
            cursor: pointer;
            border-bottom: 2px solid transparent;
            transition: all 0.3s ease;
            font-weight: 600;
        }

        .tab.active {
            border-bottom-color: #667eea;
            color: #667eea;
        }

        .tab:hover {
            background: rgba(102, 126, 234, 0.1);
        }

        .tab-content {
            display: none;
        }

        .tab-content.active {
            display: block;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>Customer & Internal Content</h1>
            <p>Analyze Confluence content and JIRA tickets for duplications, accuracy issues, and orphaned content</p>
            
            <div class="nav-tabs">
                <a href="/" class="nav-tab">Dashboard</a>
                <a href="/tickets" class="nav-tab">Tickets</a>
                <a href="/audits" class="nav-tab">Veracity Audits</a>
                <a href="/settings" class="nav-tab">Sync Services</a>
            </div>
        </div>

        <div class="controls">
            <div class="control-row">
                <button class="btn btn-success" onclick="syncConfluence()">üîÑ Sync Confluence</button>
                <button class="btn btn-info" onclick="syncIntercom()">üìö Sync Intercom</button>
                <button class="btn btn-primary" onclick="analyzeContent()">üîç Analyze Content</button>
                <button class="btn btn-warning" onclick="loadAnalysis()">üìä Load Analysis</button>
                <span id="sync-status"></span>
            </div>
        </div>

        <div class="stats-grid" id="statistics">
            <!-- Statistics will be loaded here -->
        </div>

        <div class="analysis-container">
            <div class="analysis-header">
                <div class="analysis-count" id="analysis-count">No analysis loaded</div>
                <div id="loading-indicator" style="display: none;">üîÑ Loading...</div>
            </div>
            <div id="error-message"></div>
            <div id="success-message"></div>

            <div class="tabs">
                <div class="tab active" onclick="showTab('duplications')">Duplications</div>
                <div class="tab" onclick="showTab('accuracy')">Accuracy Issues</div>
                <div class="tab" onclick="showTab('orphaned')">Orphaned Content</div>
            </div>

            <div id="duplications" class="tab-content active">
                <div id="duplications-content">
                    <div class="loading">Click "Analyze Content" to start</div>
                </div>
            </div>

            <div id="accuracy" class="tab-content">
                <div id="accuracy-content">
                    <div class="loading">Click "Analyze Content" to start</div>
                </div>
            </div>

            <div id="orphaned" class="tab-content">
                <div id="orphaned-content">
                    <div class="loading">Click "Analyze Content" to start</div>
                </div>
            </div>
        </div>
    </div>

    <script>
        let currentAnalysis = null;

        // Load sync status on page load
        document.addEventListener('DOMContentLoaded', function() {
            loadSyncStatus();
        });

        function loadSyncStatus() {
            fetch('/api/tickets/sync-status')
                .then(response => response.json())
                .then(data => {
                    if (data.last_sync) {
                        document.getElementById('sync-status').innerHTML = 
                            `Last sync: ${new Date(data.last_sync).toLocaleString()}`;
                    }
                })
                .catch(error => {
                    console.error('Error loading sync status:', error);
                });
        }

        function syncConfluence() {
            showMessage('üîÑ Starting Confluence sync...', 'info');
            document.getElementById('loading-indicator').style.display = 'block';
            
            fetch('/api/confluence/sync')
                .then(response => response.json())
                .then(data => {
                    document.getElementById('loading-indicator').style.display = 'none';
                    if (data.error) {
                        showMessage(`‚ùå Sync failed: ${data.error}`, 'error');
                    } else {
                        showMessage(`‚úÖ Confluence sync completed! ${data.total_content} content items across ${data.spaces_processed} spaces`, 'success');
                        loadSyncStatus();
                    }
                })
                .catch(error => {
                    document.getElementById('loading-indicator').style.display = 'none';
                    showMessage(`‚ùå Sync error: ${error.message}`, 'error');
                });
        }

        function syncIntercom() {
            showMessage('üìö Starting Intercom sync...', 'info');
            document.getElementById('loading-indicator').style.display = 'block';
            
            fetch('/api/intercom/sync')
                .then(response => response.json())
                .then(data => {
                    document.getElementById('loading-indicator').style.display = 'none';
                    if (data.error) {
                        showMessage(`‚ùå Sync failed: ${data.error}`, 'error');
                    } else {
                        showMessage(`‚úÖ Intercom sync completed! ${data.count} content items (${data.help_center} Help Center, ${data.light_hub} Light Hub)`, 'success');
                        loadSyncStatus();
                    }
                })
                .catch(error => {
                    document.getElementById('loading-indicator').style.display = 'none';
                    showMessage(`‚ùå Sync error: ${error.message}`, 'error');
                });
        }

        function analyzeContent() {
            showMessage('üîç Starting content analysis...', 'info');
            document.getElementById('loading-indicator').style.display = 'block';
            
            fetch('/api/content/analyze')
                .then(response => response.json())
                .then(data => {
                    document.getElementById('loading-indicator').style.display = 'none';
                    if (data.error) {
                        showMessage(`‚ùå Analysis failed: ${data.error}`, 'error');
                    } else {
                        currentAnalysis = data;
                        updateStatistics(data.summary);
                        displayAnalysis(data);
                        showMessage(`‚úÖ Content analysis completed! Found ${data.summary.duplications_found} duplications, ${data.summary.accuracy_issues_found} accuracy issues, ${data.summary.orphaned_content_found} orphaned content`, 'success');
                    }
                })
                .catch(error => {
                    document.getElementById('loading-indicator').style.display = 'none';
                    showMessage(`‚ùå Analysis error: ${error.message}`, 'error');
                });
        }

        function loadAnalysis() {
            document.getElementById('loading-indicator').style.display = 'block';
            
            fetch('/api/content/analysis')
                .then(response => response.json())
                .then(data => {
                    document.getElementById('loading-indicator').style.display = 'none';
                    if (Object.keys(data).length === 0) {
                        showMessage('No analysis data found. Run analysis first.', 'error');
                        return;
                    }
                    
                    currentAnalysis = data;
                    updateStatistics(data.summary);
                    displayAnalysis(data);
                    showMessage('‚úÖ Analysis data loaded successfully', 'success');
                })
                .catch(error => {
                    document.getElementById('loading-indicator').style.display = 'none';
                    showMessage(`‚ùå Error loading analysis: ${error.message}`, 'error');
                });
        }

        function updateStatistics(summary) {
            const statsHtml = `
                <div class="stat-card">
                    <div class="stat-number">${summary.total_confluence_items || 0}</div>
                    <div class="stat-label">Confluence Items</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number">${summary.total_intercom_items || 0}</div>
                    <div class="stat-label">Intercom Items</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number">${summary.total_jira_tickets || 0}</div>
                    <div class="stat-label">JIRA Tickets</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number">${summary.duplications_found || 0}</div>
                    <div class="stat-label">Duplications</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number">${summary.accuracy_issues_found || 0}</div>
                    <div class="stat-label">Accuracy Issues</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number">${summary.orphaned_content_found || 0}</div>
                    <div class="stat-label">Orphaned Content</div>
                </div>
            `;
            document.getElementById('statistics').innerHTML = statsHtml;
            document.getElementById('analysis-count').textContent = 
                `${(summary.total_confluence_items || 0) + (summary.total_intercom_items || 0) + (summary.total_jira_tickets || 0)} items analyzed`;
        }

        function displayAnalysis(analysis) {
            displayDuplications(analysis.duplications || []);
            displayAccuracyIssues(analysis.accuracy_issues || []);
            displayOrphanedContent(analysis.orphaned_content || []);
        }

        function displayDuplications(duplications) {
            if (duplications.length === 0) {
                document.getElementById('duplications-content').innerHTML = 
                    '<div class="loading">No duplications found</div>';
                return;
            }

            const tableHtml = `
                <table class="analysis-table">
                    <thead>
                        <tr>
                            <th>Confluence Content</th>
                            <th>JIRA Ticket</th>
                            <th>Similarity</th>
                            <th>Type</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${duplications.map(dup => `
                            <tr>
                                <td>
                                    <a href="${dup.confluence_item.url}" target="_blank" class="content-link">
                                        ${dup.confluence_item.title}
                                    </a>
                                    <br><small>${dup.confluence_item.space_name}</small>
                                </td>
                                <td>
                                    <a href="https://brightmove.atlassian.net/browse/${dup.jira_ticket.key}" target="_blank" class="content-link">
                                        ${dup.jira_ticket.key}
                                    </a>
                                    <br><small>${dup.jira_ticket.summary}</small>
                                </td>
                                <td>
                                    <span class="similarity-score similarity-${dup.type === 'high_similarity' ? 'high' : 'medium'}">
                                        ${(dup.similarity_score * 100).toFixed(1)}%
                                    </span>
                                </td>
                                <td>${dup.type.replace('_', ' ').toUpperCase()}</td>
                            </tr>
                        `).join('')}
                    </tbody>
                </table>
            `;
            document.getElementById('duplications-content').innerHTML = tableHtml;
        }

        function displayAccuracyIssues(accuracyIssues) {
            if (accuracyIssues.length === 0) {
                document.getElementById('accuracy-content').innerHTML = 
                    '<div class="loading">No accuracy issues found</div>';
                return;
            }

            const tableHtml = `
                <table class="analysis-table">
                    <thead>
                        <tr>
                            <th>Confluence Content</th>
                            <th>Issue Type</th>
                            <th>Severity</th>
                            <th>Details</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${accuracyIssues.map(issue => `
                            <tr>
                                <td>
                                    <a href="${issue.confluence_item.url}" target="_blank" class="content-link">
                                        ${issue.confluence_item.title}
                                    </a>
                                    <br><small>${issue.confluence_item.space_name}</small>
                                </td>
                                <td>${issue.issue_type.replace('_', ' ').toUpperCase()}</td>
                                <td class="severity-${issue.severity}">${issue.severity.toUpperCase()}</td>
                                <td>
                                    ${issue.days_since_update ? `${issue.days_since_update} days since update` : ''}
                                    ${issue.broken_reference ? `Broken reference: ${issue.broken_reference}` : ''}
                                </td>
                            </tr>
                        `).join('')}
                    </tbody>
                </table>
            `;
            document.getElementById('accuracy-content').innerHTML = tableHtml;
        }

        function displayOrphanedContent(orphanedContent) {
            if (orphanedContent.length === 0) {
                document.getElementById('orphaned-content').innerHTML = 
                    '<div class="loading">No orphaned content found</div>';
                return;
            }

            const tableHtml = `
                <table class="analysis-table">
                    <thead>
                        <tr>
                            <th>Confluence Content</th>
                            <th>Space</th>
                            <th>Last Updated</th>
                            <th>Reason</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${orphanedContent.map(orphaned => `
                            <tr>
                                <td>
                                    <a href="${orphaned.confluence_item.url}" target="_blank" class="content-link">
                                        ${orphaned.confluence_item.title}
                                    </a>
                                </td>
                                <td>${orphaned.confluence_item.space_name}</td>
                                <td>${formatDate(orphaned.confluence_item.updated)}</td>
                                <td>${orphaned.reason}</td>
                            </tr>
                        `).join('')}
                    </tbody>
                </table>
            `;
            document.getElementById('orphaned-content').innerHTML = tableHtml;
        }

        function showTab(tabName) {
            // Hide all tab contents
            document.querySelectorAll('.tab-content').forEach(content => {
                content.classList.remove('active');
            });
            
            // Remove active class from all tabs
            document.querySelectorAll('.tab').forEach(tab => {
                tab.classList.remove('active');
            });
            
            // Show selected tab content
            document.getElementById(tabName).classList.add('active');
            
            // Add active class to clicked tab
            event.target.classList.add('active');
        }

        function formatDate(dateString) {
            if (!dateString) return 'Unknown';
            try {
                return new Date(dateString).toLocaleDateString();
            } catch {
                return 'Invalid Date';
            }
        }

        function showMessage(message, type) {
            const messageDiv = document.getElementById(type === 'error' ? 'error-message' : 'success-message');
            messageDiv.innerHTML = `<div class="${type}">${message}</div>`;
            setTimeout(() => {
                messageDiv.innerHTML = '';
            }, 5000);
        }
    </script>
</body>
</html> 